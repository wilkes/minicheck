Just playing around with a QuickCheck implementation in clojure.

Example:

(use 'minicheck)

(defmethod generate ::list [_ max-size type]
  ((list-of size (arbitrary type))))

(defprop sort-is-idempotent
    [xs (arbitrary ::list 10 :int)]
  (= (sort (sort xs)) (sort xs)))

(defprop sort-min-first
    [xs (such-that not-empty (arbitrary ::list 10 :int))]
  (= (first (sort xs)) (apply min xs)))

(run-all-properties)  ;; run all properties
(run-all-properties 10)  ;; run all properties, 10 times each
(sort-min-first) ;; run a specific property
(sort-min-first 1000) ;; run a specific property 1000 times